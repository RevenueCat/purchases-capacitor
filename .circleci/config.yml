version: 2.1
orbs:
  macos: circleci/macos@2.3.6
  android: circleci/android@3.0.2
  node: circleci/node@5.1.0
  revenuecat: revenuecat/sdks-common-config@dev:0797bbcc943eecd4dcb0bf81dabd8e3e102a2105

aliases:
  base-mac-job: &base-mac-job
    resource_class: macos.m1.medium.gen1
    macos:
      xcode: '15.2'
    shell: /bin/bash --login -o pipefail

  release-tags: &release-tags
    filters:
      tags:
        ignore: /^.*-SNAPSHOT/
      branches:
        ignore: /.*/

  release-branches: &release-branches
    filters:
      tags:
        ignore: /.*/
      branches:
        only: /^release\/.*/

  only-main-branch: &only-main-branch
    filters:
      tags:
        ignore: /.*/
      branches:
        only: main

parameters:
  action:
    type: enum
    enum: [build, upgrade-hybrid-common, bump, insert-changelog-in-main]
    default: build
  version:
    type: string
    default: ''
  automatic:
    type: boolean
    default: false

commands:

  install-nvm:
    steps:
      - node/install:
          install-yarn: true

  yarn-dependencies-unix:
    description: "Install yarn dependencies"
    steps:
      - install-nvm
      - restore_cache:
          key: v2-unix-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v2-unix-dependencies-{{ checksum "package.json" }}

  yarn-dependencies-mac:
    description: "Install yarn dependencies"
    steps:
      - install-nvm
      - restore_cache:
          key: v2-mac-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v2-mac-dependencies-{{ checksum "package.json" }}

  yarn-dependencies-ui-unix:
    description: "Install yarn dependencies for UI package"
    steps:
      - install-nvm
      - restore_cache:
          key: v2-unix-ui-dependencies-{{ checksum "purchases-capacitor-ui/package.json" }}
      - run:
          name: Install UI package dependencies
          command: cd purchases-capacitor-ui && npm install
      - save_cache:
          paths:
            - purchases-capacitor-ui/node_modules
          key: v2-unix-ui-dependencies-{{ checksum "purchases-capacitor-ui/package.json" }}

  yarn-dependencies-ui-mac:
    description: "Install yarn dependencies for UI package on Mac"
    steps:
      - install-nvm
      - restore_cache:
          key: v2-mac-ui-dependencies-{{ checksum "purchases-capacitor-ui/package.json" }}
      - run:
          name: Install UI package dependencies
          command: cd purchases-capacitor-ui && npm install
      - save_cache:
          paths:
            - purchases-capacitor-ui/node_modules
          key: v2-mac-ui-dependencies-{{ checksum "purchases-capacitor-ui/package.json" }}

  install-sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Setup Java environment
          command: |
            sdk env install
            echo -e '\nexport JAVA_HOME="/home/circleci/.sdkman/candidates/java/current"' >> $BASH_ENV

  copy-npm-rc:
    steps:
      - run:
          name: Copy npmrc sample file to final location
          command: cp .npmrc.SAMPLE .npmrc

  copy-npm-rc-ui:
    steps:
      - run:
          name: Copy npmrc sample file to UI package location
          command: cp .npmrc.SAMPLE purchases-capacitor-ui/.npmrc

jobs:
  run-tests-ios:
    <<: *base-mac-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - yarn-dependencies-mac
      - run: yarn build
      - run: yarn verify:ios

  run-tests-android:
    executor:
      name: android/android_machine
      resource_class: large
      tag: default
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - yarn-dependencies-unix
      - run: yarn build
      - run: yarn verify:android

  build-purchase-tester:
    <<: *base-mac-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - yarn-dependencies-mac
      - run:
          name: Build purchase tester
          command: bundle exec fastlane build_purchase_tester

  run-lint:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - yarn-dependencies-unix
      - run: yarn build
      - run: yarn lint

  make-release:
    description: "Publishes the new version and creates a github release"
    <<: *base-mac-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - yarn-dependencies-mac
      - revenuecat/trust-github-key
      - copy-npm-rc
      - run:
          name: release
          command: bundle exec fastlane release

  update-hybrid-common-versions:
    description: "Creates a PR updating purchases-hybrid-common to latest release"
    <<: *base-mac-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - revenuecat/trust-github-key
      - revenuecat/setup-git-credentials
      - run:
          name: Updating to next version of phc
          command: |
            bundle exec fastlane update_hybrid_common \
            version:<< pipeline.parameters.version >> \
            open_pr:true \
            automatic_release:<< pipeline.parameters.automatic >>

  # Note this is not using the orb's automatic-bump job since we need to install yarn to update docs here.
  bump:
    description: >
      Runs automatic bump
    docker:
      - image: cimg/ruby:3.1.2
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - revenuecat/trust-github-key
      - revenuecat/setup-git-credentials
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - yarn-dependencies-unix
      - run:
          name: Create automatic PR
          command: bundle exec fastlane automatic_bump

  # UI Package Jobs
  run-lint-ui:
    description: "Run linting for purchases-capacitor-ui package"
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - yarn-dependencies-unix
      - yarn-dependencies-ui-unix
      - run: yarn build
      - run:
          name: Lint UI package
          command: cd purchases-capacitor-ui && npm run lint

  dry-run-release-ui:
    description: "Validate purchases-capacitor-ui package can be published"
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - yarn-dependencies-unix
      - yarn-dependencies-ui-unix
      - run: yarn build
      - run:
          name: Build UI package
          command: cd purchases-capacitor-ui && npm run build
      - run:
          name: Dry run UI package release
          command: cd purchases-capacitor-ui && npm publish --dry-run

  make-release-ui:
    description: "Publishes the UI package to npm"
    <<: *base-mac-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - yarn-dependencies-mac
      - yarn-dependencies-ui-mac
      - revenuecat/trust-github-key
      - copy-npm-rc-ui
      - run:
          name: Release UI package
          command: bundle exec fastlane release_purchases_capacitor_ui

workflows:
  version: 2
  build-test:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - run-tests-ios
      - run-tests-android
      - run-lint
      - build-purchase-tester
      # UI Package jobs
      - run-lint-ui
      - dry-run-release-ui

  temp-insert-changelog-latest-in-main-if-needed:
    when:
      and:
        - equal: [ insert-changelog-in-main, << pipeline.parameters.action >> ]
    jobs:
      - revenuecat/insert-changelog-latest-in-main-if-needed:
          cache-version: v1

  deploy:
    when:
      and:
        - not:
            equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        # Only run this workflow when the action is "build" (the default),
        # so it doesn't run for other actions like "bump" on a release branch,
        # which should only open the release PR but not deploy it.
        # (Deployment happens after the hold job is approved on the release PR.)
        - equal: [ build, << pipeline.parameters.action >> ]
    jobs:
      - run-tests-ios:
          <<: *release-branches
      - run-tests-android:
          <<: *release-branches
      - run-lint:
          <<: *release-branches
      # UI Package jobs for release branches
      - run-lint-ui:
          <<: *release-branches
      - hold:
          type: approval
          requires:
            - run-tests-ios
            - run-tests-android
            - run-lint
            - run-lint-ui
          <<: *release-branches
      - revenuecat/tag-current-branch:
          requires:
            - hold
          <<: *release-branches
      - make-release:
          <<: *release-tags
      - make-release-ui:
          requires:
            - make-release
          <<: *release-tags
      - revenuecat/insert-changelog-latest-in-main-if-needed:
          cache-version: v1
          requires:
            - make-release
            - make-release-ui
          <<: *release-tags

  danger:
    jobs:
      - revenuecat/danger

  weekly-run-workflow:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "release-train", << pipeline.schedule.name >> ]
    jobs:
      - bump

  manual-trigger-bump:
    when:
      equal: [ bump, << pipeline.parameters.action >> ]
    jobs:
      - bump

  update-hybrid-common-versions:
    when:
      equal: [ upgrade-hybrid-common, << pipeline.parameters.action >> ]
    jobs:
      - update-hybrid-common-versions
