plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'      // â–¶ Kotlin / Compose
}

android {
    namespace "com.revenuecat.purchases.capacitor"

    compileSdk 34            // 34 == Android 14.  33 still works, but 34 is safer.

    defaultConfig {
        minSdk 21            // Purchases-UI requires 21+
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // ðŸ‘‡ Enable Compose, required by purchases-ui
    buildFeatures { compose true }

    // Use the compiler extension version that the Purchases BOM declares
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.11"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }

    lint { abortOnError false }
}

repositories {
    google()
    mavenCentral()
}

ext {                        // keep your test libs in sync
    junitVersion                = '4.13.2'
    androidxJunitVersion        = '1.1.5'
    androidxEspressoCoreVersion = '3.5.1'
}

dependencies {
    // Capacitor bridge
    implementation project(':capacitor-android')

    // --- RevenueCat --------------------------------------------------------
    // 8.x is the first line that bundles the Compose paywall
    def rcVersion = '8.17.0'          // or whatever is the latest 8.x today
    implementation "com.revenuecat.purchases:purchases:$rcVersion"
    implementation "com.revenuecat.purchases:purchases-ui:$rcVersion"
    // ----------------------------------------------------------------------

    // (Optional) If you need Compose material icons, etc.
    // implementation "androidx.compose.material3:material3:1.2.0"

    // Unit / UI tests
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}